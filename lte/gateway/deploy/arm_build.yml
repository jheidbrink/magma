
---
# Copyright 2021 The Magma Authors.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Phase 1 - Create the arm graviton instance
  hosts: localhost
  gather_facts: False
  vars:
    arm_instance_type: t4g.medium
    arm_security_group: sg-06f6d3272c1bea936  # public_ssh in tng-magma AWS account in us-east-1
    arm_vpc: subnet-0452cc2ee349a4d1a  # public 1 in tng-magma AWS account in us-east-1
    ansible_ssh_private_key_file: "~/.ssh/id_rsa_jan_tng_magmacore"
    ansible_ssh_user: ubuntu
    commit_id: master
    magma_hash: bla
  tasks:
    - name: Find out Ubuntu 20.04 AMI ID
      amazon.aws.ec2_ami_info:
        filters:
          name: "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-arm64-server-20220810"
      register: ubuntuAmiSearchResult

    - name: Launch instance
      amazon.aws.ec2_instance:
        name: "arm-build-janheidbrink-{{ commit_id }}-{{ magma_hash }}"
        launch_template:
          name: "public-instance-custom-host-keys-multiple-users"
        security_group: "{{ arm_security_group }}"
        instance_type: "{{ arm_instance_type }}"
        image_id: "{{ ubuntuAmiSearchResult.images[0].image_id }}"
        wait: true
        vpc_subnet_id: "{{ arm_vpc }}"
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_size: 50
              delete_on_termination: true
        network:
          assign_public_ip: yes
        tags:
          Environment: CI
      register: ec2

    - name: Sleep for 10 seconds
      ansible.builtin.wait_for:
        timeout: 10
      delegate_to: localhost

    - name: Fetch the public ip address
      amazon.aws.ec2_instance:
        name: "arm-build-janheidbrink-{{ commit_id }}-{{ magma_hash }}"
        launch_template:
          name: "public-instance-custom-host-keys-multiple-users"
        security_group: "{{ arm_security_group }}"
        instance_type: "{{ arm_instance_type }}"
        image_id: "{{ ubuntuAmiSearchResult.images[0].image_id }}"
        wait: true
        vpc_subnet_id: "{{ arm_vpc }}"
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_size: 50
              delete_on_termination: true
        network:
          assign_public_ip: yes
        tags:
          Environment: CI
      register: ec2

    - name: Printing useful debug infos
      ansible.builtin.debug:
        msg: "{{ ec2 }}"

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groupname: launched
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 10
        timeout: 320
      loop: "{{ ec2.instances }}"

- name: Phase 2 - Configure and build on newly build instance
  hosts: launched
  vars:
    ansible_ssh_private_key_file: "~/.ssh/id_rsa-github_actions_jan"
    ansible_ssh_user: "ubuntu"
    magma_dir: /tmp/magma/
    magma_repo: https://github.com/magma/magma.git
    magma_branch: master #default value
    magma_hash: "jo"
  tasks:
    - name: Configure the instance
      become: true
      apt:
        state: present
        update_cache: true
        pkg:
          - docker.io
          - git
          - apt-transport-https
          - curl
          - gnupg
          - jq

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: adding existing user '{{ user }}' to group docker
      user:
        name: '{{ ansible_ssh_user }}'
        groups: docker
        append: yes
      become: true

    - name: Installing latest docker-compose
      become: true
      ansible.builtin.shell: |
        COMPOSE_VERSION=$(curl -s "https://api.github.com/repos/docker/compose/tags" | jq -r '.[0].name')
        curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose

    - name: Create magma directory
      file:
        path: "{{ magma_dir }}"
        state: directory
        mode: u+rwx
        owner: "{{ ansible_ssh_user }}"
      become: true

    - name: Download github repo
      git:
        repo: "{{ magma_repo }}"
        dest: "{{ magma_dir }}"
        version: "{{ magma_branch }}"

    - name: Reset ssh connection to allow user changes to affect 'current login user'
      meta: reset_connection

    - name: Run build
      ansible.builtin.shell: |
        cd "{{ magma_dir }}"/lte/gateway/docker
        export IMAGE_VERSION="{{ magma_hash }}"
        docker-compose build --build-arg CPU_ARCH=aarch64 --build-arg DEB_PORT=arm64

- name: Phase 3 - Kill the arm instance
  hosts: localhost
  tasks:
    - name: Terminate instances that were previously launched
      amazon.aws.ec2_instance:
        region: "{{ arm_region }}"
        state: absent
        instance_ids: "{{ item }}"
      loop: "{{ ec2.instance_ids }}"
      tags: debug
